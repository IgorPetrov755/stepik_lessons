import time

import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select

from pages.saucedemo_landing import SauceDemoLanding


class TestSaucedemo:
    @pytest.fixture
    def firefox_browser(self):
        options = webdriver.FirefoxOptions()
        options.binary_location = "J:\projects\stepik_lessons\chromedriver\geckodriver.exe"
        browser = webdriver.Firefox(options=options)
        yield browser
        browser.quit()

    def test_saucedemo(self, firefox_browser):
        browser = firefox_browser
        """Test Case 1: test"""
        # 1. –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç Saucedemo.
        page = SauceDemoLanding(browser)
        page.open()

        # 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç "Swag Labs".
        logo_text = page.get_element_text(page.logo)
        assert logo_text == "Swag Labs", '–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç "Swag Labs"'

        # 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ª–æ–≥–∏–Ω–∞.
        login_button = browser.find_element(By.CSS_SELECTOR, '*[data-test="login-button"]')
        assert login_button.get_attribute(name='value') == "Login", "—Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –õ–æ–≥–∏–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"

        # 4. –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ö–æ–¥ –ø–æ–¥ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å—å—é standard_user —Å –ø–∞—Ä–æ–ª–µ–º secret_sauce.
        username_input = browser.find_element(By.CSS_SELECTOR, 'input[data-test="username"]')
        username_input.send_keys("standard_user")
        password_input = browser.find_element(By.CSS_SELECTOR, 'input[data-test="password"]')
        password_input.send_keys("secret_sauce")
        login_button.click()

        assert browser.current_url == 'https://www.saucedemo.com/inventory.html', '–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞'
        shopping_cart_link = browser.find_elements(By.CSS_SELECTOR, '*[data-test="shopping-cart-link"]')
        assert len(shopping_cart_link) == 1, '–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞'

        # 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ "Name (A to Z)".
        filter_active_value = browser.find_element(By.CSS_SELECTOR, '*[data-test="active-option"]')
        assert filter_active_value.text == "Name (A to Z)", \
            '—Ñ–∏–ª—å—Ç—Ä –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ "Name (A to Z)"'

        # 6. –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "Add to cart".
        first_card = browser.find_element(By.CSS_SELECTOR, 'div.inventory_item:first-child')
        cart_button = first_card.find_element(By.CSS_SELECTOR,
                                              'button[data-test="add-to-cart-sauce-labs-backpack"]')
        assert cart_button.text == "Add to cart", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É'
        cart_button.click()

        # 7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∏–∫–æ–Ω–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ —Å —Ü–∏—Ñ—Ä–æ–π 1.
        cart_badge = browser.find_elements(By.CSS_SELECTOR, 'span[data-test="shopping-cart-badge"]')
        assert len(cart_badge) == 1, '–¢–æ–≤–∞—Ä –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É'
        assert cart_badge[0].text == "1", '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã'

        # 8. –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "Add to cart".
        last_card = browser.find_element(By.CSS_SELECTOR, 'div.inventory_item:last-child')
        last_card_name = last_card.find_element(By.CSS_SELECTOR, '*[data-test="inventory-item-name"]').text
        cart_button = last_card.find_element(By.CSS_SELECTOR, 'button.btn_inventory')
        cart_button.click()

        # 9. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ –∏–∫–æ–Ω–∫–µ –∫–æ—Ä–∑–∏–Ω—ã —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –∏ —Ç–µ–ø–µ—Ä—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ü–∏—Ñ—Ä—É 2.
        cart_badge = browser.find_elements(By.CSS_SELECTOR, 'span[data-test="shopping-cart-badge"]')
        assert len(cart_badge) == 1, '–¢–æ–≤–∞—Ä –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É'
        assert cart_badge[0].text == "2", '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã'

        # 10. –£–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "Remove" —É –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ.
        first_card = browser.find_element(By.CSS_SELECTOR, 'div.inventory_item:first-child')
        cart_button = first_card.find_element(By.CSS_SELECTOR, 'button.btn_inventory')
        assert cart_button.text == "Remove", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É'
        cart_button.click()

        # 11. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –Ω–∞ –∏–∫–æ–Ω–∫–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∏ —Ç–µ–ø–µ—Ä—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ü–∏—Ñ—Ä—É 1.
        cart_badge = browser.find_elements(By.CSS_SELECTOR, 'span[data-test="shopping-cart-badge"]')
        assert len(cart_badge) == 1, '–¢–æ–≤–∞—Ä –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É'
        assert cart_badge[0].text == "1", '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã'

        # 12. –ö–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∏–∫–æ–Ω–∫—É –∫–æ—Ä–∑–∏–Ω—ã üõí –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É.
        cart_link = browser.find_element(By.CSS_SELECTOR, 'a[data-test="shopping-cart-link"]')
        cart_link.click()
        assert browser.current_url == 'https://www.saucedemo.com/cart.html', '–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –≤ –∫–∞—Ä—Ç–æ—á–∫—É –∫–æ—Ä–∑–∏–Ω—ã'

        # 13. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞) –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ—Ä–∑–∏–Ω—ã.
        card_list = browser.find_elements(By.CSS_SELECTOR, '.cart_item')
        assert len(card_list) == 1, '–í –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç'
        card_item_name = card_list[0].find_element(By.CSS_SELECTOR, '*[data-test="inventory-item-name"]').text
        assert card_item_name == last_card_name, '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ —Ä–∞–≤–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É'

        # 14. –ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "Continue Shopping" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Ç–æ–≤–∞—Ä–æ–≤.
        continue_shopping_button = browser.find_element(By.CSS_SELECTOR, 'button[data-test="continue-shopping"]')
        continue_shopping_button.click()
        time.sleep(1)
        assert browser.current_url == 'https://www.saucedemo.com/inventory.html', '–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤'

        # 15. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ —Å "Name (A to Z)" –Ω–∞ "Price (low to high)".
        select = Select(browser.find_element(By.CSS_SELECTOR, 'select[data-test="product-sort-container"]'))
        select.select_by_value("lohi")

        # 16. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ: —Ü–µ–Ω–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –º–µ–Ω—å—à–µ —Ü–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.
        first_card = browser.find_element(By.CSS_SELECTOR, 'div.inventory_item:first-child')
        first_card_price = first_card.find_element(By.CSS_SELECTOR, '*[data-test="inventory-item-price"]').text

        last_card = browser.find_element(By.CSS_SELECTOR, 'div.inventory_item:last-child')
        last_card_price = last_card.find_element(By.CSS_SELECTOR, '*[data-test="inventory-item-price"]').text
        # assert first_card_price < last_card_price, \
        #     '–ü—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–µ Price (low to high) —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'
